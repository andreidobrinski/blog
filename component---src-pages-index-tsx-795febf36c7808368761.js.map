{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMdx","edges","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","fontFamily","color","colours","secondary","to","usePostDate","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,kJA2EeA,UAzCG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,OAAOC,MAE1B,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACVC,EAAMG,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CACEF,MAAO,CAAEG,UAAW,OAAQC,WAAY,UAAWC,MAAOC,IAAQC,WAClEC,GAAIb,EAAKE,OAAOC,MAEfR,IAGL,+BAAQmB,YAAYd,EAAKC,eAE3B,iCACE,uBACEc,wBAAyB,CACvBC,OAAQhB,EAAKC,YAAYgB,aAAejB,EAAKkB,gBAOzD,kBAAC,IAAD,QAOC,IAAMC,EAAY","file":"component---src-pages-index-tsx-795febf36c7808368761.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, colours } from \"../utils/typography\"\nimport { usePostDate } from \"../components/hooks\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMdx: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          updated: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMdx.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link\n                  style={{ boxShadow: 'none', fontFamily: \"inherit\", color: colours.secondary }}\n                  to={node.fields.slug}\n                >\n                  {title}\n                </Link>\n              </h3>\n              <small>{usePostDate(node.frontmatter)}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n      <Bio />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n         query {\n           site {\n             siteMetadata {\n               title\n             }\n           }\n           allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n             edges {\n               node {\n                 excerpt\n                 fields {\n                   slug\n                 }\n                 frontmatter {\n                   date(formatString: \"MMMM DD, YYYY\")\n                   updated(formatString: \"MMMM DD, YYYY\")\n                   title\n                   description\n                 }\n               }\n             }\n           }\n         }\n       `\n"],"sourceRoot":""}